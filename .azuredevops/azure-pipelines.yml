# Azure DevOps Pipeline for UrbanAI.API

trigger:
- develop
- main
- release/*

pool:
  vmImage: 'windows-latest' # Use a Windows agent as the project is .NET Core

variables:
  buildConfiguration: 'Release'
  dotNetSdkVersion: '8.x' # Specify the .NET SDK version

stages:
- stage: BuildAndTest
  displayName: 'Build and Test'
  jobs:
  - job: Build
    displayName: 'Build and Run Tests'
    steps:
    - task: UseDotNet@2
      displayName: 'Use .NET SDK $(dotNetSdkVersion)'
      inputs:
        version: $(dotNetSdkVersion)

    - task: DotNetCoreCLI@2
      displayName: 'Restore dependencies'
      inputs:
        command: 'restore'
        projects: '**/*.csproj'

    - task: DotNetCoreCLI@2
      displayName: 'Build project'
      inputs:
        command: 'build'
        projects: '**/*.csproj'
        arguments: '--configuration $(buildConfiguration)'

    - task: DotNetCoreCLI@2
      displayName: 'Run tests'
      inputs:
        command: 'test'
        projects: '**/*Tests.csproj'
        arguments: '--configuration $(buildConfiguration) --collect "Code coverage"' # Collect code coverage

    - task: DotNetCoreCLI@2
      displayName: 'Apply Database Migrations'
      inputs:
        command: 'dotnet'
        projects: 'src/UrbanAI.Infrastructure/UrbanAI.Infrastructure.csproj'
        arguments: 'ef database update --project src/UrbanAI.Infrastructure'
        workingDirectory: '$(System.DefaultWorkingDirectory)' # Ensure command runs from repo root

    - task: DotNetCoreCLI@2
      displayName: 'Publish API'
      inputs:
        command: 'publish'
        projects: 'src/UrbanAI.API/UrbanAI.API.csproj'
        arguments: '--configuration $(buildConfiguration) --output $(Build.ArtifactStagingDirectory)/api'

    - task: PublishBuildArtifacts@1
      displayName: 'Publish Build Artifacts'
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)/api'
        ArtifactName: 'api-drop'
        publishLocation: 'Container'
