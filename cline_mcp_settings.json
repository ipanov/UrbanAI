{
  "mcpServers": {
    "customPromptPrefixes": [
      "At the beginning of any new task thread in PLAN MODE, and after each plan_mode_respond action, explicitly list all currently connected MCP servers. Then, use the Firecrawl MCP server to search for and identify any new MCP servers or tools relevant to the task. Finally, present a clear summary of both existing and newly identified MCP servers, and explain how they will be leveraged for the task."
    ],
    "github.com/upstash/context7-mcp": {
      "autoApprove": [
        "resolve-library-id",
        "get-library-docs"
      ],
      "disabled": false,
      "timeout": 60,
      "type": "stdio",
      "command": "node",
      "args": [
        "C:\\Users\\USER\\Documents\\Cline\\MCP\\context7-mcp\\dist\\index.js"
      ]
    },
    "github.com/NightTrek/Software-planning-mcp": {
      "autoApprove": [
        "start_planning",
        "save_plan",
        "add_todo",
        "remove_todo",
        "get_todos",
        "update_todo_status"
      ],
      "disabled": false,
      "timeout": 60,
      "type": "stdio",
      "command": "node",
      "args": [
        "C:\\Users\\USER\\Documents\\Cline\\MCP\\software-planning-mcp\\build\\index.js"
      ]
    },
    "github.com/modelcontextprotocol/servers/tree/main/src/filesystem": {
      "autoApprove": [
        "list_allowed_directories",
        "write_file",
        "read_file",
        "read_multiple_files",
        "edit_file",
        "create_directory",
        "list_directory",
        "directory_tree",
        "move_file",
        "search_files",
        "get_file_info",
        "execute_command"
      ],
      "disabled": false,
      "timeout": 60,
      "type": "stdio",
      "command": "docker",
        "args": [
          "run",
          "-i",
          "--rm",
          "--mount",
          "type=bind,src=C:/Users/USER/source/repos/ptcc.v4/,dst=/projects",
          "mcp/filesystem",
          "/projects"
        ]
    },
    "github.com/modelcontextprotocol/servers/tree/main/src/sequentialthinking": {
      "autoApprove": [
        "list_connected_mcp_servers",
        "sequentialthinking"
      ],
      "disabled": false,
      "timeout": 60,
      "type": "stdio",
      "command": "docker",
      "args": [
        "run",
        "--rm",
        "-i",
        "mcp/sequentialthinking"
      ]
    },
    "github.com/executeautomation/mcp-playwright": {
      "autoApprove": [
        "start_codegen_session",
        "end_codegen_session",
        "get_codegen_session",
        "clear_codegen_session",
        "playwright_navigate",
        "playwright_screenshot",
        "playwright_click",
        "playwright_iframe_click",
        "playwright_iframe_fill",
        "playwright_fill",
        "playwright_select",
        "playwright_hover",
        "playwright_evaluate",
        "playwright_console_logs",
        "playwright_close",
        "playwright_get",
        "playwright_post",
        "playwright_put",
        "playwright_patch",
        "playwright_delete",
        "playwright_expect_response",
        "playwright_assert_response",
        "playwright_custom_user_agent",
        "playwright_get_visible_text",
        "playwright_get_visible_html",
        "playwright_go_back",
        "playwright_go_forward",
        "playwright_drag",
        "playwright_press_key",
        "playwright_save_as_pdf",
        "playwright_click_and_switch_tab"
      ],
      "disabled": false,
      "timeout": 60,
      "type": "stdio",
      "command": "node",
      "args": [
        "C:\\Users\\USER\\AppData\\Roaming\\npm\\node_modules\\@executeautomation\\playwright-mcp-server\\dist\\index.js"
      ]
    },
    "github.com/mendableai/firecrawl-mcp-server": {
      "autoApprove": [
        "firecrawl_scrape",
        "firecrawl_map",
        "firecrawl_crawl",
        "firecrawl_check_crawl_status",
        "firecrawl_search",
        "firecrawl_extract",
        "firecrawl_deep_research",
        "firecrawl_generate_llmstxt"
      ],
      "disabled": false,
      "timeout": 60,
      "type": "stdio",
      "command": "cmd",
      "args": [
        "/c",
        "set FIRECRAWL_API_KEY=fc-66e8214797294e32be7dd923b60a6b80 && npx -y firecrawl-mcp"
      ]
    },
    "github.com/AgentDeskAI/browser-tools-mcp": {
      "autoApprove": [
        "getConsoleLogs",
        "getConsoleErrors",
        "getNetworkErrors",
        "getNetworkLogs",
        "takeScreenshot",
        "getSelectedElement",
        "wipeLogs",
        "runAccessibilityAudit",
        "runPerformanceAudit",
        "runSEOAudit",
        "runNextJSAudit",
        "runDebuggerMode",
        "runAuditMode",
        "runBestPracticesAudit"
      ],
      "disabled": false,
      "timeout": 60,
      "type": "stdio",
      "command": "npx",
      "args": [
        "@agentdeskai/browser-tools-mcp@latest"
      ],
      "env": {}
    },
    "github.com/GLips/Figma-Context-MCP": {
      "autoApprove": [
        "get_figma_data",
        "download_figma_images"
      ],
      "disabled": false,
      "timeout": 60,
      "type": "stdio",
      "command": "cmd",
      "args": [
        "/c",
        "npx",
        "-y",
        "figma-developer-mcp",
        "--figma-api-key=figd_Yo3KxsQasPbkD8r0k43UhcaPGUnL_IwU4Ye7JYOv",
        "--stdio"
      ]
    },
    "github.com/Azure/azure-mcp": {
      "autoApprove": [
        "azmcp-subscription-list",
        "azmcp-bestpractices-get",
        "azmcp-appconfig-account-list",
        "azmcp-appconfig-kv-delete",
        "azmcp-appconfig-kv-list",
        "azmcp-appconfig-kv-lock",
        "azmcp-appconfig-kv-set",
        "azmcp-appconfig-kv-show",
        "azmcp-appconfig-kv-unlock",
        "azmcp-cosmos-account-list",
        "azmcp-cosmos-database-container-item-query",
        "azmcp-cosmos-database-container-list",
        "azmcp-cosmos-database-list",
        "azmcp-extension-az",
        "azmcp-extension-azd",
        "azmcp-group-list",
        "azmcp-keyvault-key-create",
        "azmcp-keyvault-key-get",
        "azmcp-keyvault-key-list",
        "azmcp-kusto-cluster-get",
        "azmcp-kusto-cluster-list",
        "azmcp-kusto-database-list",
        "azmcp-kusto-query",
        "azmcp-kusto-sample",
        "azmcp-kusto-table-list",
        "azmcp-kusto-table-schema",
        "azmcp-monitor-healthmodels-entity-gethealth",
        "azmcp-monitor-log-query",
        "azmcp-monitor-table-list",
        "azmcp-monitor-table-type-list",
        "azmcp-monitor-workspace-list",
        "azmcp-postgres-database-list",
        "azmcp-postgres-database-query",
        "azmcp-postgres-server-config",
        "azmcp-postgres-server-list",
        "azmcp-postgres-server-param",
        "azmcp-postgres-table-list",
        "azmcp-postgres-table-schema",
        "azmcp-redis-cache-accesspolicy-list",
        "azmcp-redis-cache-list",
        "azmcp-redis-cluster-database-list",
        "azmcp-redis-cluster-list",
        "azmcp-search-index-describe",
        "azmcp-search-index-list",
        "azmcp-search-index-query",
        "azmcp-search-service-list",
        "azmcp-servicebus-queue-details",
        "azmcp-servicebus-topic-details",
        "azmcp-servicebus-topic-subscription-details",
        "azmcp-storage-account-list",
        "azmcp-storage-blob-container-details",
        "azmcp-storage-blob-container-list",
        "azmcp-storage-blob-list",
        "azmcp-storage-table-list"
      ],
      "disabled": false,
      "timeout": 60,
      "type": "stdio",
      "command": "azmcp",
      "args": [
        "server",
        "start"
      ]
    },
    "github.com/RyanCardin15/AzureDevOps-MCP": {
      "autoApprove": [
        "createWorkItem",
        "updateWorkItem",
        "updateWorkItemState",
        "listBranches",
        "createLink",
        "listWorkItems",
        "getWorkItemById",
        "searchWorkItems",
        "getRecentlyUpdatedWorkItems",
        "getMyWorkItems",
        "addWorkItemComment",
        "assignWorkItem",
        "bulkCreateWorkItems",
        "getBoards",
        "getBoardColumns",
        "getBoardItems",
        "moveCardOnBoard",
        "getSprints",
        "getCurrentSprint",
        "getSprintWorkItems",
        "getSprintCapacity",
        "getTeamMembers",
        "getProjectDetails",
        "createProject",
        "getAreas",
        "getIterations",
        "createArea",
        "createIteration",
        "getProcesses",
        "getWorkItemTypes",
        "getWorkItemTypeFields",
        "listRepositories",
        "getRepository",
        "createRepository",
        "searchCode",
        "browseRepository",
        "getFileContent",
        "getCommitHistory",
        "listPullRequests",
        "createPullRequest",
        "getPullRequest",
        "getPullRequestComments",
        "approvePullRequest",
        "mergePullRequest",
        "runAutomatedTests",
        "getTestAutomationStatus",
        "configureTestAgents",
        "createTestDataGenerator",
        "manageTestEnvironments",
        "getTestFlakiness",
        "getTestGapAnalysis",
        "runTestImpactAnalysis",
        "getTestHealthDashboard",
        "runTestOptimization",
        "createExploratorySessions",
        "recordExploratoryTestResults",
        "convertFindingsToWorkItems",
        "getExploratoryTestStatistics",
        "runSecurityScan",
        "getSecurityScanResults",
        "trackSecurityVulnerabilities",
        "generateSecurityCompliance",
        "integrateSarifResults",
        "runComplianceChecks",
        "getComplianceStatus",
        "createComplianceReport",
        "manageSecurityPolicies",
        "trackSecurityAwareness",
        "rotateSecrets",
        "auditSecretUsage",
        "vaultIntegration",
        "listArtifactFeeds",
        "getPackageVersions",
        "publishPackage",
        "promotePackage",
        "deletePackageVersion",
        "listContainerImages",
        "getContainerImageTags",
        "scanContainerImage",
        "manageContainerPolicies",
        "manageUniversalPackages",
        "createPackageDownloadReport",
        "checkPackageDependencies",
        "getAICodeReview",
        "suggestCodeOptimization",
        "identifyCodeSmells",
        "getPredictiveBugAnalysis",
        "getDeveloperProductivity",
        "getPredictiveEffortEstimation",
        "getCodeQualityTrends",
        "suggestWorkItemRefinements",
        "suggestAutomationOpportunities",
        "createIntelligentAlerts",
        "predictBuildFailures",
        "optimizeTestSelection",
        "listProjects"
      ],
      "disabled": false,
      "timeout": 60,
      "type": "stdio",
      "command": "node",
      "args": [
        "C:/Users/USER/Documents/Cline/MCP/azuredevops-mcp/dist/index.js"
      ],
      "cwd": "C:/Users/USER/Documents/Cline/MCP/azuredevops-mcp/"
    },
    "azure-devops-wiki-mcp": {
      "autoApprove": [
        "manage_wiki_page"
      ],
      "disabled": false,
      "timeout": 60,
      "type": "stdio",
      "command": "node",
      "args": [
        "C:/Users/USER/Documents/Cline/MCP/azure-devops-wiki-mcp/build/index.js"
      ],
      "env": {
        "AZURE_DEVOPS_PERSONAL_ACCESS_TOKEN": "2alMwrLCpOSBk20TwbYIRsiYzq9cgY6W7Pj38qD5QqopUT7A8WXOJQQJ99BFACAAAAAAAAAAAAASAZDO2CTD"
      }
    },
    "github.com/github/github-mcp-server": {
      "autoApprove": [
        "add_issue_comment",
        "add_pull_request_review_comment_to_pending_review",
        "assign_copilot_to_issue",
        "cancel_workflow_run",
        "create_and_submit_pull_request_review",
        "create_branch",
        "create_issue",
        "create_or_update_file",
        "create_pending_pull_request_review",
        "create_pull_request",
        "create_repository",
        "delete_pending_pull_request_review",
        "delete_file",
        "delete_workflow_run_logs",
        "dismiss_notification",
        "download_workflow_run_artifact",
        "fork_repository",
        "get_code_scanning_alert",
        "get_commit",
        "get_file_contents",
        "get_issue",
        "get_issue_comments",
        "get_job_logs",
        "get_me",
        "get_notification_details",
        "get_pull_request",
        "get_pull_request_comments",
        "get_pull_request_diff",
        "get_pull_request_files",
        "get_pull_request_reviews",
        "get_pull_request_status",
        "get_secret_scanning_alert",
        "get_tag",
        "get_workflow_run",
        "get_workflow_run_logs",
        "get_workflow_run_usage",
        "list_branches",
        "list_code_scanning_alerts",
        "list_commits",
        "list_issues",
        "list_notifications",
        "list_pull_requests",
        "list_secret_scanning_alerts",
        "list_tags",
        "list_workflow_jobs",
        "list_workflow_run_artifacts",
        "list_workflow_runs",
        "list_workflows",
        "manage_notification_subscription",
        "manage_repository_notification_subscription",
        "mark_all_notifications_read",
        "merge_pull_request",
        "push_files",
        "request_copilot_review",
        "rerun_failed_jobs",
        "rerun_workflow_run",
        "run_workflow",
        "search_code",
        "search_issues",
        "search_repositories",
        "search_users",
        "submit_pending_pull_request_review",
        "update_issue",
        "update_pull_request",
        "update_pull_request_branch"
      ],
      "disabled": false,
      "timeout": 60,
      "type": "stdio",
      "command": "C:\\Users\\USER\\Documents\\Cline\\MCP\\github-mcp-server\\github-mcp-server.exe",
      "args": [
        "stdio"
      ],
      "env": {
        "GITHUB_PERSONAL_ACCESS_TOKEN": "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"
      }
    },
    "TalkToFigma": {
      "command": "bunx",
      "args": [
        "cursor-talk-to-figma-mcp@latest"
      ],
      "type": "stdio",
      "timeout": 60,
      "disabled": false,
      "autoApprove": [
        "get_document_info",
        "get_selection",
        "read_my_design",
        "get_node_info",
        "get_nodes_info",
        "set_fill_color",
        "set_stroke_color",
        "move_node",
        "clone_node",
        "resize_node",
        "delete_node",
        "delete_multiple_nodes",
        "export_node_as_image",
        "set_text_content",
        "get_styles",
        "get_local_components",
        "get_annotations",
        "set_annotation",
        "set_multiple_annotations",
        "create_component_instance",
        "get_instance_overrides",
        "set_instance_overrides",
        "set_corner_radius",
        "scan_text_nodes",
        "scan_nodes_by_types",
        "set_multiple_text_contents",
        "set_layout_mode",
        "set_padding",
        "set_axis_align",
        "set_layout_sizing",
        "set_item_spacing",
        "get_reactions",
        "set_default_connector",
        "create_connections",
        "create_frame",
        "create_rectangle",
        "create_text",
        "join_channel"
      ]
    },
    "github.com/RichardHan/mssql_mcp_server": {
      "command": "python",
      "args": [
        "-m",
        "mssql_mcp_server"
      ],
      "type": "stdio",
      "timeout": 60,
      "disabled": false,
      "autoApprove": [
        "execute_sql"
      ],
      "env": {
        "MSSQL_SERVER": "ptccv4devdb02.complysci.local",
        "MSSQL_DATABASE": "PTCC_DBDev",
        "MSSQL_USER": "PTCCApp_Dev",
        "MSSQL_PASSWORD": "V4$Ptcc2014",
        "MSSQL_PORT": "1433"
      }
    }
  }
}
